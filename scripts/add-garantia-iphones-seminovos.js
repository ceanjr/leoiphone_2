#!/usr/bin/env node

/**
 * Script para adicionar garantia de 3 meses, capinha e pel√≠cula
 * em todos os iPhones seminovos
 *
 * Crit√©rios:
 * - Produto cont√©m "iPhone" no nome
 * - Condi√ß√£o = "seminovo"
 *
 * Atualiza√ß√µes:
 * - Garantia: 3_meses
 * - Acess√≥rios.capinha: true
 * - Acess√≥rios.pelicula: true
 */

const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Erro: Vari√°veis de ambiente n√£o configuradas')
  console.error('Necess√°rio: NEXT_PUBLIC_SUPABASE_URL e SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function main() {
  console.log('üîç Buscando iPhones seminovos...\n')

  // Buscar todos os iPhones seminovos ativos
  const { data: produtos, error } = await supabase
    .from('produtos')
    .select('*')
    .ilike('nome', '%iphone%')
    .eq('condicao', 'seminovo')
    .eq('ativo', true)
    .is('deleted_at', null)
    .order('created_at', { ascending: false })

  if (error) {
    console.error('‚ùå Erro ao buscar produtos:', error)
    process.exit(1)
  }

  if (!produtos || produtos.length === 0) {
    console.log('‚úÖ Nenhum iPhone seminovo encontrado.')
    return
  }

  console.log(`üì¶ Encontrados ${produtos.length} iPhone(s) seminovo(s):\n`)

  const produtosParaAtualizar = []

  for (const produto of produtos) {
    console.log(`\nüìã ${produto.nome} (ID: ${produto.id})`)

    const precisaAtualizar = []
    const updates = {}

    // Verificar garantia
    if (produto.garantia !== '3_meses') {
      precisaAtualizar.push(`Garantia: ${produto.garantia || 'nenhuma'} ‚Üí 3_meses`)
      updates.garantia = '3_meses'
    } else {
      console.log('   ‚úÖ Garantia: 3_meses')
    }

    // Verificar capinha
    const acessoriosAtuais = produto.acessorios || {}
    if (!acessoriosAtuais.capinha) {
      precisaAtualizar.push('Capinha: false ‚Üí true')
      updates.acessorios = {
        ...acessoriosAtuais,
        capinha: true
      }
    } else {
      console.log('   ‚úÖ Capinha: true')
    }

    // Verificar pel√≠cula
    if (!acessoriosAtuais.pelicula) {
      precisaAtualizar.push('Pel√≠cula: false ‚Üí true')
      updates.acessorios = {
        ...(updates.acessorios || acessoriosAtuais),
        pelicula: true
      }
    } else {
      console.log('   ‚úÖ Pel√≠cula: true')
    }

    // Se h√° atualiza√ß√µes necess√°rias
    if (precisaAtualizar.length > 0) {
      console.log('   ‚ö†Ô∏è  Necessita atualiza√ß√£o:')
      precisaAtualizar.forEach(msg => console.log(`      - ${msg}`))

      produtosParaAtualizar.push({
        id: produto.id,
        nome: produto.nome,
        updates
      })
    } else {
      console.log('   ‚úÖ Produto j√° est√° correto')
    }
  }

  // Se n√£o h√° produtos para atualizar
  if (produtosParaAtualizar.length === 0) {
    console.log('\n\n‚úÖ Todos os iPhones seminovos j√° est√£o configurados corretamente!')
    return
  }

  // Mostrar resumo
  console.log(`\n\nüìä Resumo:`)
  console.log(`   Total de iPhones seminovos: ${produtos.length}`)
  console.log(`   Necessitam atualiza√ß√£o: ${produtosParaAtualizar.length}`)
  console.log(`   J√° est√£o corretos: ${produtos.length - produtosParaAtualizar.length}`)

  console.log('\nüîß Aplicando atualiza√ß√µes...\n')

  let atualizadosComSucesso = 0
  let erros = 0

  for (const item of produtosParaAtualizar) {
    console.log(`üîß Atualizando: ${item.nome}`)

    const { error: updateError } = await supabase
      .from('produtos')
      .update(item.updates)
      .eq('id', item.id)

    if (updateError) {
      console.error(`   ‚ùå Erro: ${updateError.message}`)
      erros++
    } else {
      console.log(`   ‚úÖ Atualizado com sucesso!`)
      atualizadosComSucesso++
    }
  }

  // Resultado final
  console.log('\n\n' + '='.repeat(60))
  console.log('üìä RESULTADO FINAL')
  console.log('='.repeat(60))
  console.log(`‚úÖ Atualizados com sucesso: ${atualizadosComSucesso}`)
  if (erros > 0) {
    console.log(`‚ùå Erros: ${erros}`)
  }
  console.log('='.repeat(60))

  console.log('\nüí° Dica: Acesse o painel admin para verificar os produtos:')
  console.log('   https://www.leoiphone.com.br/admin/produtos\n')
}

main().catch(console.error)
